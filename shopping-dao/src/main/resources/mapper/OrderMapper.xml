<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.hd.entity.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="loginName" jdbcType="VARCHAR" property="loginName" />
    <result column="userAddress" jdbcType="VARCHAR" property="userAddress" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="cost" jdbcType="REAL" property="cost" />
    <result column="serialnumber" jdbcType="VARCHAR" property="serialnumber" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, loginName, userAddress, createTime, cost, serialnumber
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from easybuy_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <resultMap id="orderResultMap" type="com.hd.entity.Order">
    <id column="orderId" jdbcType="INTEGER" property="id" />
    <result column="loginName" jdbcType="VARCHAR" property="loginName" />
    <result column="userAddress" jdbcType="VARCHAR" property="userAddress" />
    <result column="allCost" jdbcType="REAL" property="cost" />
    <result column="serialnumber" jdbcType="VARCHAR" property="serialnumber" />
    <collection property="orderDetailList" ofType="com.hd.entity.OrderDetail" >
        <result column="orderDetailId" property="id"></result>
        <result column="quantity" property="quantity"></result>
        <result column="cost" property="cost"></result>
        <association property="product" javaType="com.hd.entity.Product">
          <id column="productId" property="id"></id>
          <id column="fileName" property="fileName"></id>
        </association>
    </collection>
  </resultMap>
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="orderResultMap">
    SELECT
easybuy_order.loginName,
easybuy_order.userAddress,
easybuy_order.cost AS allCost,
easybuy_order.serialNumber,
easybuy_order_detail.quantity,
easybuy_order_detail.cost,
easybuy_product.id AS productId,
easybuy_product.fileName,
easybuy_order.id AS orderId,
easybuy_order_detail.id AS orderDetailId
FROM
easybuy_order
LEFT JOIN easybuy_order_detail ON easybuy_order_detail.orderId = easybuy_order.id
INNER JOIN easybuy_product ON easybuy_order_detail.productId = easybuy_product.id
WHERE easybuy_order.userId = #{userId}
  </select>

  <select id="selectAll" resultMap="orderResultMap">
    SELECT
easybuy_order.loginName,
easybuy_order.userAddress,
easybuy_order.cost AS allCost,
easybuy_order.serialNumber,
easybuy_order_detail.quantity,
easybuy_order_detail.cost,
easybuy_product.id AS productId,
easybuy_product.fileName,
easybuy_order.id AS orderId,
easybuy_order_detail.id AS orderDetailId
FROM
easybuy_order
LEFT JOIN easybuy_order_detail ON easybuy_order_detail.orderId = easybuy_order.id
INNER JOIN easybuy_product ON easybuy_order_detail.productId = easybuy_product.id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from easybuy_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hd.entity.Order">
    insert into easybuy_order (id, userId, loginName, 
      userAddress, createTime, cost, 
      serialnumber)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR},
      #{userAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{cost,jdbcType=REAL},
      #{serialnumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hd.entity.Order">
    <selectKey  keyProperty="id" resultType="int" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into easybuy_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="loginName != null">
        loginName,
      </if>
      <if test="userAddress != null">
        userAddress,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="serialnumber != null">
        serialnumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=REAL},
      </if>
      <if test="serialnumber != null">
        #{serialnumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hd.entity.Order">
    update easybuy_order
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        loginName = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        userAddress = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=REAL},
      </if>
      <if test="serialnumber != null">
        serialnumber = #{serialnumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hd.entity.Order">
    update easybuy_order
    set userId = #{userId,jdbcType=INTEGER},
      loginName = #{loginName,jdbcType=VARCHAR},
      userAddress = #{userAddress,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      cost = #{cost,jdbcType=REAL},
      serialnumber = #{serialnumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>